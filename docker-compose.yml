x-meltano-image: &meltano-image
  image: code-challenge:dev 
  build: .

x-meltano-env: &meltano-env
  MELTANO_DATABASE_URI: postgresql+psycopg2://meltano:meltano@meltano-system-db/meltano

x-airflow-env: 
  &airflow-env
  AIRFLOW__CORE__DEFAULT_TIMEZONE: America/Sao_Paulo

services:  
  airflow-scheduler:
    <<: *meltano-image
    command: "invoke airflow scheduler"
    environment:
      <<: [*airflow-env,*meltano-env]
    volumes:
      - meltano_elt_logs_data:/project/.meltano/logs/elt
    expose:
      - 8793
    networks:
      - meltano
      - airflow
    depends_on:
      meltano-system-db:
        condition: service_healthy
      airflow-metadata-db:
        condition: service_healthy
    restart: unless-stopped

  # db:
  #   image: postgres:12
  #   environment:
  #     POSTGRES_DB: northwind
  #     POSTGRES_USER: northwind_user
  #     POSTGRES_PASSWORD: thewindisblowing
  #   volumes:
  #     - ./dbdata:/var/lib/postgresql/data
  #     - ./data/northwind.sql:/docker-entrypoint-initdb.d/northwind.sql
  #   ports:
  #     - 5432:5432
      
  airflow-metadata-db:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: airflow # CHANGE ME
      POSTGRES_DB: airflow
      POSTGRES_USER: airflow
      PGUSER: airflow
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - airflow_postgresql_data:/var/lib/postgresql/data
    expose:
      - 5432
    networks:
      - airflow
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  
  meltano-system-db:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: meltano
      POSTGRES_DB: meltano
      POSTGRES_USER: meltano
      PGUSER: meltano
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - meltano_postgresql_data:/var/lib/postgresql/data
    expose:
      - 5432
    networks:
      - meltano
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  meltano:
  airflow:

volumes:
  meltano_postgresql_data:
    driver: local
  meltano_elt_logs_data:
    driver: local
  airflow_postgresql_data:
    driver: local